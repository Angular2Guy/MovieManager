webAppName: moviemanagerapp
dbName: postgresserver
webImageName: angular2guy/moviemanager
webImageVersion: latest
dbImageName: postgres
dbImageVersion: 13
volumeClaimName: postgres-pv-claim
persistentVolumeName: task-pv-volume
webServiceName: moviemanagerservice
dbServiceName: postgresservice
#for production use replace the jwtTokenSecrect value with a random alphanumeric string of the same length or longer
jwtTokenSecrect: secret-key1234567890abcdefghijklmnopqrstuvpxyz

kafkaName: kafkaapp
zookeeperName: zookeeperserver
kafkaImageName: bitnami/kafka
kafkaImageVersion: latest
zookeeperImageName: bitnami/zookeeper
zookeeperImageVersion: latest
kafkaServiceName: kafkaservice
zookeeperServiceName: zookeeperservice

secret:
  nameApp: app-env-secret
  nameDb: db-env-secret
  nameKafka: kafka-env-secret
  nameZookeeper: zookeeper-env-secret

envZookeeper:
  normal: 
    ALLOW_ANONYMOUS_LOGIN: yes
  secret:
   ZOOKEEPER_TICK_TIME: "2000"
    
envKafka:
  normal: 
    KAFKA_BROKER_ID: "1"
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
    KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092
    ALLOW_PLAINTEXT_LISTENER: yes    
  secret:
    KAFKA_ZOOKEEPER_CONNECT: "zookeeperservice:2181"  

envDb:
  normal: 
    POSTGRES_URL: "jdbc:postgresql://postgresservice:5432/movies"
  secret:
    POSTGRES_USER: dbuser
    POSTGRES_PASSWORD: passwordtoreplace
    POSTGRES_DB: movies
    
envApp:
  normal: 
    JPA_SHOW_SQL: true
    H2_CONSOLE: false
    SHUTDOWN_PHASE: 10s
    SPRING_PROFILES_ACTIVE: "prod,prod-kafka"
    KAFKA_SERVICE_NAME: kafkaService
  secret:
    JWTTOKEN_SECRET: secret-key1234567890abcdefghijklmnopqrstuvwxyz
    POSTGRES_USER: dbuser
    POSTGRES_PASSWORD: passwordtoreplace
    POSTGRES_URL: "jdbc:postgresql://postgresservice:5432/movies"